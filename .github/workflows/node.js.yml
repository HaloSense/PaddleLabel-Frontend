# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Generate gh-pages

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      # - name: Get yarn cache directory path
      #   id: yarn-cache-dir-path
      #   run: echo "::set-output name=dir::$(yarn cache dir)"
      # - name: Cache Yarn
      #   id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      #   uses: actions/cache@v2
      #   env:
      #     cache-name: cache-yarn
      #   with:
      #     # npm cache files are stored in `~/.npm` on Linux/macOS
      #     path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
      #     key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Cache node_modules
        id: node-modules-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Config basic git info
        run: git config --global user.email "bot@github.com" && git config --global user.name "Action Bot"
      - name: Install yarn
        run: npm i --global yarn
      - name: Install node_modules
        if: steps.restore-cache.outputs.cache-hit != 'true'
        run: yarn
      - name: Build gh-page
        run: npm run build:gh-page
      - run: mv dist .. && git checkout . && git fetch && git checkout gh-page
      - run: rm -rf ./* && \cp -rf ../dist/* . && git add .
      - name: Push to gh-page
        run: (git commit -m "Auto update gh-page" && git push -f) || true
