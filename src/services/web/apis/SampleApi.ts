/* tslint:disable */
/* eslint-disable */
/**
 * PP-Label API Spec
 * Back end APIs for PP-Label
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: me@linhan.email
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';

export interface GetFileRequest {
  path?: string;
}

export interface GetStructureRequest {
  path: string;
}

/**
 *
 */
export class SampleApi extends runtime.BaseAPI {
  /**
   * Your GET endpoint
   */
  async getFileRaw(
    requestParameters: GetFileRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<void>> {
    const queryParameters: any = {};

    if (requestParameters.path !== undefined) {
      queryParameters['path'] = requestParameters.path;
    }

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/samples/file`,
        method: 'GET',
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.VoidApiResponse(response);
  }

  /**
   * Your GET endpoint
   */
  async getFile(
    path?: string,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<void> {
    await this.getFileRaw({ path: path }, initOverrides);
  }

  /**
   * Get sample file or folder
   */
  async getStructureRaw(
    requestParameters: GetStructureRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<Array<object>>> {
    if (requestParameters.path === null || requestParameters.path === undefined) {
      throw new runtime.RequiredError(
        'path',
        'Required parameter requestParameters.path was null or undefined when calling getStructure.',
      );
    }

    const queryParameters: any = {};

    if (requestParameters.path !== undefined) {
      queryParameters['path'] = requestParameters.path;
    }

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/samples/structure`,
        method: 'GET',
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse<any>(response);
  }

  /**
   * Get sample file or folder
   */
  async getStructure(
    path: string,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<Array<object>> {
    const response = await this.getStructureRaw({ path: path }, initOverrides);
    return await response.value();
  }
}
