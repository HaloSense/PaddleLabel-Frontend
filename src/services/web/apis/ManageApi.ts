/* tslint:disable */
/* eslint-disable */
/**
 * PP-Label API Spec
 * Back end APIs for PP-Label
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: me@linhan.email
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import {
  InlineObject7,
  InlineObject7FromJSON,
  InlineObject7ToJSON,
  InlineResponse2002,
  InlineResponse2002FromJSON,
  InlineResponse2002ToJSON,
} from '../models';

export interface LoadSampleRequest {
  inlineObject7?: InlineObject7;
}

/**
 *
 */
export class ManageApi extends runtime.BaseAPI {
  /**
   * Get backend version
   */
  async getVersionRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<string>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/version`,
        method: 'GET',
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.TextApiResponse(response) as any;
  }

  /**
   * Get backend version
   */
  async getVersion(initOverrides?: RequestInit): Promise<string> {
    const response = await this.getVersionRaw(initOverrides);
    return await response.value();
  }

  /**
   * Download and import sample project
   */
  async loadSampleRaw(
    requestParameters: LoadSampleRequest,
    initOverrides?: RequestInit,
  ): Promise<runtime.ApiResponse<InlineResponse2002>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request(
      {
        path: `/samples`,
        method: 'POST',
        headers: headerParameters,
        query: queryParameters,
        body: InlineObject7ToJSON(requestParameters.inlineObject7),
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      InlineResponse2002FromJSON(jsonValue),
    );
  }

  /**
   * Download and import sample project
   */
  async loadSample(
    inlineObject7?: InlineObject7,
    initOverrides?: RequestInit,
  ): Promise<InlineResponse2002> {
    const response = await this.loadSampleRaw({ inlineObject7: inlineObject7 }, initOverrides);
    return await response.value();
  }
}
